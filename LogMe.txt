 public class LogMe
    {
        private readonly Logger Logger;

        public LogMe()
        {
            this.Logger = SetLoggerWithEvent();
        }
        public void Log()
        {
            Logger.Log(LogLevel.Debug, "Loggin stuff");
        }

        private Logger SetLogger()
        {
            var config = new LoggingConfiguration();

            var fileTarget = new FileTarget();
            config.AddTarget("file", fileTarget);
            fileTarget.FileName = "C:/temp/file.txt";
            //fileTarget.FileName = "${basedir}/file.txt";
            fileTarget.Layout = @"${date:format=HH\:mm\:ss}:- ${logger} - ${message}";

            var rule2 = new LoggingRule("*", LogLevel.Debug, fileTarget);
            config.LoggingRules.Add(rule2);

            // Step 5. Activate the configuration
            LogManager.Configuration = config;
            return LogManager.GetLogger("LogMe");
        }

        private Logger SetLoggerWithEvent()
        {
            var config = new LoggingConfiguration();

            var fileTarget = new FileTarget();
            config.AddTarget("file", fileTarget);
            fileTarget.FileName = "C:/temp/file.txt";
            //fileTarget.FileName = "${basedir}/file.txt";
            fileTarget.Layout = @"{date:format=HH\:mm\:ss}:- ${logger} - ${message}";

            var rule2 = new LoggingRule("*", LogLevel.Debug, fileTarget);
            config.LoggingRules.Add(rule2);

            // Step 5. Activate the configuration
            LogManager.Configuration = config;
            return LogManager.GetLogger("LogMe");
        }
    }
